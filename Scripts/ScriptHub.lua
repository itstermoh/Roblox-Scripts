
do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=getfenv or function()return _ENV;end;local v9=setmetatable;local v10=pcall;local v11=select;local v12=unpack or table.unpack;local v13=tonumber;local function v14(v15,v16)local v17=0;local v18;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;while true do if (v17==2) then function v21()local v38=v1(v15,v18,v18);v18=v18 + 1;return v38;end v22=nil;function v22()local v39,v40=v1(v15,v18,v18 + (239 -(106 + 131)));v18=v18 + (1199 -(467 + 730));return (v40 * 256) + v39;end v17=3;end if (v17==1) then v20=nil;function v20(v30,v31,v32)if v32 then local v62=0 -0;local v63;while true do if (v62==((0 + 0) -(0 -0))) then v63=(v30/((3 -1)^(v31-(1469 -(323 + 835 + 310)))))%((786 -(244 + 540))^(((v32-(1 + (1480 -(494 + 986)))) -(v31-(2 -1))) + 1));return v63-(v63%1);end end else local v64=(1423 -(389 + 1034)) -0;local v65;while true do if (v64==((877 -(408 + 469)) + 0)) then v65=(2 + 0)^(v31-1);return (((v30%(v65 + v65))>=v65) and 1) or (0 -0);end end end end v21=nil;v17=2;end if (v17==4) then function v24()local v41=v23();local v42=v23();return (( -(2 + 0) * v20(v42,24 + 8)) + 1 + 0) * ((1 + 1)^(v20(v42,45 -24,123 -92) -(525 + 498))) * ((((v20(v42,1,859 -(551 + 288)) * ((3 -(473 -(418 + 54)))^(67 -35))) + v41)/((1 + 1)^(1434 -(948 + 434)))) + (2 -1));end v25=nil;function v25(v33)local v43=759 -(220 + 234 + 305);local v44;local v45;while true do if (v43==(1762 -((670 -404) + 1494))) then v45={};for v70=1 + 0, #v44 do v45[v70]=v2(v1(v3(v44,v70,v70)));end v43=6 -3;end if (v43==(0 -0)) then v44=nil;if  not v33 then v33=v23();if (v33==0) then return "";end end v43=1551 -(430 + 1120);end if (v43==(6 -(11 -8))) then return v6(v45);end if (v43==(1 -0)) then v44=v3(v15,v18,(v18 + v33) -(1 + 0));v18=v18 + v33;v43=7 -5;end end end v17=5;end if (3==v17) then v23=nil;function v23()local v46,v47,v48,v49=v1(v15,v18,v18 + 3 + 0);v18=v18 + 1 + 3;return (v49 * 16777216) + (v48 * (50819 + 14717)) + (v47 * (437 -181)) + v46;end v24=nil;v17=4;end if (v17==7) then function v29(v34,v35,v36)local v50=0;local v51;local v52;local v53;while true do if (v50==1) then v53=v34[3];return function(...)local v74=1;local v75= -1;local v76={...};local v77=v11("#",...) -1;local function v78()local v79=v51;local v80=Const;local v81=v52;local v82=v53;local v83=v27;local v84={};local v85={};local v86={};for v92=363 -(335 + 28),v77 do if (((33 + (628 -(231 + 391)))<=(13471 -9543)) and (v92>=v82)) then v84[v92-v82]=v76[v92 + (621 -(116 + 504))];else v86[v92]=v76[v92 + (719 -(112 + 606))];end end local v87=(v77-v82) + (1 -0);local v88;local v89;while true do local v93=0 -0;while true do if ((v93==(889 -(777 + 111))) or ((3142 -2026)>=(4656 + 326))) then if ((v89<=(6 + 5)) or (604>(2004 -1366))) then if (((131 + 257 + 1867)==(1587 + 139 + 529)) and (v89<=(2 + 3))) then if (((2902 + 1604)>=(1303 + 219)) and (v89<=(5 -3))) then if (((2432 -762)<=((3496 -2002) + 1248)) and (v89<=(0 + 0 + (0 -0)))) then v86[v88[2 + 0]]=v86[v88[1252 -(23 + 1226)]][v88[4]];elseif (((1972 -(262 + 1482))<=(4794 -((1968 -(109 + 1685)) + 33))) and (v89>(1219 -(108 + 1110)))) then local v132=(0 + 0) -0;local v133;local v134;local v135;while true do if (((0 + 0)==v132) or ((3638 -(123 + 1678))==(11730 -7848))) then v133=0;v134=nil;v132=1 + 0;end if ((v132==(3 -2)) or (1632>=(3724 -(924 + 265)))) then v135=nil;while true do if ((v133==(0 + 0)) or ((5480 -3704)<(519 + 689))) then local v177=0;while true do if ((v177==(1 + 0)) or ((3582 -(918 + 531))>(7571 -(15754 -10818)))) then v133=1 + 0;break;end if (((3021 -(1440 + 290))<=(2193 + 863)) and (v177==0)) then v134=v88[5 -3];v135=v86[v88[3 -0]];v177=1430 -(1283 + 146);end end end if ((v133==(1826 -(668 + 385 + 772))) or (713>=(6406 -4986))) then v86[v134 + (1097 -(61 + 1035))]=v135;v86[v134]=v135[v88[1 + 3]];break;end end break;end end else local v136=1630 -(355 + (4456 -3181));local v137;local v138;local v139;local v140;while true do if ((1858>=(2 + 1 + 29)) and (v136==0)) then v137=1302 -(129 + 1173);v138=nil;v136=2 -(1011 -(746 + 264));end if ((v136==(2 + 0)) or (4459<2759)) then while true do if ((v137==(1 + 1)) or ((3518 + 269)<(2662 -1815))) then for v187=1,v88[1441 -(414 + 1023)] do local v188=0 -0;local v189;while true do if ((3466<(4472 -(15 + (282 -182)))) and (v188==(1 + 0))) then if (((1828 -(12 + 7))>(309 -193)) and (v189[952 -(395 + 556)]==((408 + 278) -(121 + (2352 -1791))))) then v140[v187-1]={v86,v189[4 -1]};else v140[v187-(286 -(272 + 13))]={v35,v189[(330 + 33) -(281 + 79)]};end v85[ #v85 + (1272 -(1187 + 84))]=v140;break;end if ((v188==(1699 -((3425 -(1708 + 152)) + (330 -(63 + 133))))) or (4895<=(52 + 1647))) then local v209=0 + 0;while true do if ((((4505 -3116) -588)==801) and (v209==((1 + 0) -0))) then v188=1 + 0;break;end if (((0 -0)==v209) or ((7 + 42)==(2699 + 2292))) then v74=v74 + 1;v189=v79[v74];v209=1;end end end end end v86[v88[2 -0]]=v29(v138,v139,v36);break;end if ((1==v137) or ((1293 + 3477)<(813 + 183))) then v140={};v139=v9({},{__index=function(v190,v191)local v199=0;local v200;local v201;while true do if (((1 -0)==v199) or ((1105 + 1837)<=(1197 -528))) then while true do if ((v200==0) or ((931 -740)>(3229 -(48 + 123)))) then local v215=0;while true do if ((v215==(0 -0)) or (571>(549 + 991 + (1885 -1091)))) then v201=v140[v191];return v201[1206 -(6 + 1199)][v201[1 + 1]];end end end end break;end if (((4766 -2210)>=(1043 + 172)) and (v199==(0 -0))) then v200=(546 + 505) -(228 + 823);v201=nil;v199=1263 -(863 + 399);end end end,__newindex=function(v192,v193,v194)local v202=(0 -0) + 0;local v203;local v204;while true do if (((2455 + 852)>=(1100 -569)) and (v202==0)) then local v210=0;while true do if (((1 + 0)==v210) or ((4358 -((294 -(181 + 38)) + 1200))==(1301 + 117))) then v202=1 + 0;break;end if ((v210==(0 + 0)) or ((6139 -(454 + 854))<1109)) then v203=0 + 0;v204=nil;v210=828 -(167 + (2104 -(87 + 1357)));end end end if ((v202==(644 -(350 + 293))) or ((2621 + 268)>(4572 -(159 + 28 + 195)))) then while true do if ((v203==(0 -0)) or (3724<(1478 -(177 + (1840 -(637 + 636)))))) then v204=v140[v193];v204[1 + 0][v204[2]]=v194;break;end end break;end end end});v137=979 -(138 + 839);end if (((5663 -(836 + 572))>(3025 -(199 + 198))) and (v137==(403 -((565 -353) + 191)))) then local v181=1514 -(393 + 1121);while true do if (((3734 -((559 -274) + 95))<=((819 + 4107) -(758 + 141))) and (v181==(0 + 0))) then v138=v81[v88[527 -(14 + 510)]];v139=nil;v181=1 + 0;end if ((404==(2145 -(164 + 1577))) and ((1299 -(986 + 312))==v181)) then v137=1 + 0;break;end end end end break;end if ((v136==(1 + 0)) or ((2527 -(205 + 20))<(3073 -(62 + 1522)))) then v139=nil;v140=nil;v136=2 + 0;end end end elseif ((v89<=(3 -0)) or (((5104 -1348) -(771 + 694))>(4964 -(893 + 708)))) then local v113=0 + 0;local v114;while true do if ((v113==0) or ((3667 -1444)>((3398 + 135) -952))) then v114=v88[2 + 0];v86[v114]=v86[v114](v12(v86,v114 + 1 + 0,v88[3]));break;end end elseif ((v89==4) or ((6169 -3988)>=(18939 -14502))) then v86[v88[2]]=v86[v88[1 + 2]];else v74=v88[3];end elseif ((((207 -123) + 35)==(5 + 114)) and (v89<=8)) then if (((43 + 2802)>=(351 -198)) and (v89<=6)) then local v115=0 + 0;local v116;local v117;while true do if (((15987 -11555)>=(6719 -4272)) and (v115==1)) then while true do if ((v116==(0 + 0)) or ((1805 + 1498)<(1911 -(285 + 980)))) then v117=v88[1380 -(760 + 618)];v86[v117](v86[v117 + 1 + 0]);break;end end break;end if ((v115==0) or ((2261 -((369 -280) + 519))>(7594 -4793))) then v116=877 -(869 + 8);v117=nil;v115=1 + 0;end end elseif ((v89==(10 -3)) or ((14603 -10780)==(4949 -2378))) then if ((v86[v88[1 + 1]]==v88[213 -(184 + 25)]) or (4403<=(8923 -6593))) then v74=v74 + (1 -0);else v74=v88[3 + 0];end elseif ((v88[837 -(235 + 600)]==v86[v88[(1127 -(976 + 148)) + (903 -(814 + 88))]]) or ((3281 -(526 + 196 + 1086))>((5314 -(737 + 58)) + 62))) then v74=v74 + (4 -3);else v74=v88[3];end elseif ((v89<=(30 -21)) or ((2616 -(248 + 106 + 3))==(1811 -((191 -132) + 608)))) then v86[v88[1 + 1]]=v88[3]~=(0 -0);elseif ((v89>(6 + 1 + 3)) or ((1370 + 1393)>=4113)) then local v142=0;local v143;while true do if (((15933 -(12884 -(742 + 363)))==(1146 + 3008)) and ((831 -(536 + (1109 -814)))==v142)) then v143=v88[(6 -3) -1];v86[v143]=v86[v143]();break;end end else do return;end end elseif (((2021 + 2128)>=(15267 -12024)) and (v89<=(24 -7))) then if ((v89<=(47 -33)) or ((4190 -2342)>=(14593 -11169))) then if ((v89<=12) or ((4689 -1919)<(86 + 176))) then v86[v88[3 -(1994 -(1320 + 673))]]={};elseif (((3432 -(8 + (1223 -264)))==2465) and (v89==(56 -43))) then v86[v88[1 + 1]]();else v86[v88[2]]=v36[v88[10 -7]];end elseif (((3597 + 415)>=(4108 -(101 + 314))) and (v89<=(9 + 6))) then local v120=0 -0;local v121;local v122;while true do if ((0==v120) or ((2222 -970)>=4835)) then v121=0 -(0 + 0);v122=nil;v120=3 -2;end if (((4732 -(352 + 137))>=((1858 -938) + 577)) and (v120==(3 -2))) then while true do if (((3805 -1420)<(10233 -5349)) and (v121==(0 + 0))) then v122=v88[1464 -(1335 + 127)];v86[v122]=v86[v122](v86[v122 + (1790 -(1362 + 427))]);break;end end break;end end elseif (((2534 -(191 + 143))<(5001 -(1217 + 227))) and (v89>(24 -8))) then v86[v88[2]][v88[612 -(240 + 369)]]=v88[4];elseif (((464 + 732)==(2664 -(66 + 1402))) and v86[v88[7 -5]]) then v74=v74 + 1 + 0;else v74=v88[3];end elseif ((v89<=(726 -(485 + 221))) or (3861<=3756)) then if (((20240 -16043)>(758 -269)) and (v89<=(8 + 10))) then for v130=v88[2],v88[3] do v86[v130]=nil;end elseif (((1108 + 332)>=(410 + 129)) and (v89>(17 + 2))) then local v146=(2745 -(50 + 1594)) -(52 + 1049);local v147;while true do if ((v146==((90 + 7) -((244 -(95 + 71)) + 19))) or ((960 -(370 + (967 -426)))>=(864 -(299 + 326)))) then v147=v88[1293 -(1009 + 282)];v86[v147]=v86[v147](v12(v86,v147 + ((1 -0) -0),v75));break;end end else local v148=0 + 0;local v149;local v150;while true do if (((8041 -(2910 + 1721))>2157) and (v148==(188 -((207 -(31 + 11)) + (32 -9))))) then v149=(0 + 0) -0;v150=nil;v148=2 -1;end if (((3904 -(34 + 1113))<4426) and (v148==(2 -1))) then while true do if (((9410 -6793)==(4897 -2280)) and (v149==(0 -0))) then v150=v88[1 + 1];v86[v150](v12(v86,v150 + (2 -1),v88[3 + 0]));break;end end break;end end end elseif ((v89<=((232 + 283) -((8 -3) + (2414 -(1891 + 35))))) or (2074>(5816 -((2739 -(914 + 506)) + 358)))) then if ((2583==2583) and (v89==((1908 -(1451 + 53)) -(297 + 86)))) then v86[v88[1134 -(911 + 221)]]=v88[(2 + 2) -1];else v86[v88[1846 -(187 + 1657)]]=v29(v81[v88[3 + 0]],nil,v36);end elseif (((3684 -1236)<(3823 -(88 + 962))) and (v89>23)) then v86[v88[2]]=v35[v88[1968 -(22 + 229 + 1714)]];else local v154=1656 -((1447 -(47 + 164)) + 420);local v155;local v156;local v157;local v158;while true do if ((v154==2) or ((3689 -(694 + 296))>(8051 -3894))) then for v174=v155,v75 do local v175=0;while true do if ((((1240 + 2034) -(383 + 1513))<(4692 -((1953 -(149 + 953)) + 788))) and (0==v175)) then v158=v158 + (1577 -(813 + 763));v86[v174]=v156[v158];break;end end end break;end if ((((0 -0) + 0)==v154) or ((893 -(14 + 400))>=4444)) then v155=v88[2];v156,v157=v83(v86[v155](v12(v86,v155 + (1955 -(1269 + (1836 -(969 + 182)))),v88[3 + 0 + 0])));v154=101 -(66 + 34);end if ((795==(429 + 366)) and (v154==(2 -1))) then local v168=1434 -(146 + 1288);while true do if (((0 + 0)==v168) or ((8255 -5333)>(12668 -8980))) then v75=(v157 + v155) -(1448 -(771 + 456 + 220));v158=0 -0;v168=1;end if (((10908 -6272)>=(247 + 228)) and (v168==(1 + 0))) then v154=2 -0;break;end end end end end v74=v74 + 1 + (0 -0);break;end if ((v93==(0 + 0)) or ((9055 -6755)>=(2052 + 2140))) then local v106=0 + 0;while true do if (((3806 -(334 + 12))<=(9541 -5954)) and (v106==(0 + 0))) then v88=v79[v74];v89=v88[1 + 0];v106=1;end if ((v106==(473 -(198 + 274))) or ((5756 -(179 + 1070))==4026)) then v93=1;break;end end end end end end A,B=v27(v10(v78));if  not A[1] then local v90=0;local v91;while true do if (v90==0) then v91=v34[4][v74] or "?";error("Script error at ["   .. v91   .. "]:"   .. A[2]);break;end end else return v12(A,2,B);end end;end if (v50==0) then v51=v34[1];v52=v34[2];v50=1;end end end return v29(v28(),{},v16)();end if (v17==6) then v28=nil;function v28()local v54=0;local v55;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v54==(1 + 0)) then v57=nil;v58=nil;v54=1971 -(1842 + 127);end if (2==v54) then local v67=0;while true do if (v67==(0 -0)) then v59=nil;v60=nil;v67=1;end if (v67~=1) then else v54=3;break;end end end if (v54~=(552 -(166 + 386))) then else local v68=0;local v69;while true do if (v68==(1973 -(509 + 1464))) then v69=0;while true do if (1==v69) then v54=615 -(328 + 286);break;end if ((0 + 0)==v69) then local v94=0;while true do if (v94~=1) then else v69=1 + 0;break;end if (v94==(0 + 0)) then v55=0;v56=nil;v94=1942 -(859 + 1082);end end end end break;end end end if (v54~=(4 -1)) then else v61=nil;while true do local v72=0;while true do if (v72==(1498 -(1126 + 372))) then if (v55==(1802 -(1248 + 553))) then local v95=0 + 0;local v96;local v97;while true do if (v95==0) then v96=0 + 0;v97=nil;v95=1 -0;end if (1~=v95) then else while true do if (v96~=0) then else v97=0;while true do if (v97~=1) then else v61={};v55=2;break;end if (v97==(0 -0)) then local v109=0;local v110;while true do if (v109~=0) then else v110=1098 -(559 + 539);while true do if (v110==(1 + 0)) then v97=1 + 0;break;end if (v110~=(0 + 0)) then else v59={v56,v57,nil,v58};v60=v23();v110=1;end end break;end end end end break;end end break;end end end if (2==v55) then local v98=322 -(191 + 131);local v99;local v100;while true do if (v98==(3 -2)) then while true do if (v99==(0 -0)) then v100=0 + 0;while true do if ((1 + 0)==v100) then for v123=1,v23() do local v124=0;local v125;while true do if (v124==(0 + 0)) then v125=v21();if (v20(v125,1,3 -2)==(0 + 0)) then local v169=0;local v170;local v171;local v172;while true do if (v169==3) then if (v20(v171,3,1034 -(789 + 242))==(3 -2)) then v172[15 -11]=v61[v172[15 -11]];end v56[v123]=v172;break;end if (v169~=(1 + 0)) then else local v183=0;local v184;while true do if (v183~=0) then else v184=0 -0;while true do if (0==v184) then local v213=0 -0;while true do if (v213~=(1417 -(15 + 1401))) then else v184=1 -0;break;end if (v213==(0 + 0)) then v172={v22(),v22(),nil,nil};if (v170==0) then local v217=0 -0;local v218;local v219;while true do if (v217~=1) then else while true do if (0==v218) then v219=0 + 0;while true do if (v219==0) then v172[3]=v22();v172[13 -9]=v22();break;end end break;end end break;end if ((177 -(30 + 147))~=v217) then else v218=0;v219=nil;v217=1;end end elseif (v170==1) then v172[10 -7]=v23();elseif (v170==2) then v172[5 -2]=v23() -((2 -0)^(122 -(66 + 40)));elseif (v170==3) then local v222=0;local v223;local v224;while true do if (v222~=(2 -1)) then else while true do if (0~=v223) then else v224=0;while true do if (v224~=0) then else v172[3]=v23() -(2^(24 -8));v172[4]=v22();break;end end break;end end break;end if (0~=v222) then else v223=0 -0;v224=nil;v222=1 + 0;end end end v213=1;end end end if (v184==1) then v169=6 -4;break;end end break;end end end if (v169==2) then if (v20(v171,1,1 + 0)~=1) then else v172[2]=v61[v172[2]];end if (v20(v171,4 -2,9 -7)==(4 -3)) then v172[3]=v61[v172[3 -0]];end v169=232 -(71 + 158);end if (0==v169) then local v185=0;local v186;while true do if (v185==0) then v186=0;while true do if (v186==(1 + 0)) then v169=1 + 0;break;end if (v186~=(390 -(222 + 168))) then else local v214=0 + 0;while true do if (v214~=0) then else v170=v20(v125,2,2 + 1);v171=v20(v125,4,3 + 3);v214=1;end if (v214==1) then v186=1;break;end end end end break;end end end end end break;end end end v55=21 -(6 + 12);break;end if (v100==(185 -(26 + 159))) then local v111=0;while true do if (v111==(3 -2)) then v100=1397 -(380 + 1016);break;end if (v111==(0 -0)) then for v161=1 + 0,v60 do local v162=1048 -(798 + 250);local v163;local v164;local v165;while true do if (v162==(1890 -(1258 + 632))) then local v176=0 -0;while true do if ((1356 -(809 + 546))==v176) then v162=3 -2;break;end if (v176==(0 + 0)) then local v196=0 -0;while true do if (0~=v196) then else v163=0 + 0;v164=nil;v196=1231 -(49 + 1181);end if (1==v196) then v176=2 -1;break;end end end end end if (v162==1) then v165=nil;while true do if (v163==1) then if (v164==1) then v165=v21()~=0;elseif (v164==2) then v165=v24();elseif (v164==3) then v165=v25();end v61[v161]=v165;break;end if (v163==(1918 -(1273 + 645))) then local v198=0;while true do if (v198~=1) then else v163=1032 -(95 + 936);break;end if (v198==(0 + 0)) then v164=v21();v165=nil;v198=1091 -(1017 + 73);end end end end break;end end end v59[3]=v21();v111=1 -0;end end end end break;end end break;end if (v98==(0 -0)) then v99=0;v100=nil;v98=1 + 0;end end end v72=1 -0;end if (v72~=(33 -(5 + 27))) then else if (v55==0) then local v101=0;while true do if (v101==1) then v58={};v55=2 -1;break;end if (v101==0) then local v107=48 -(28 + 20);while true do if (v107~=1) then else v101=1;break;end if (v107~=0) then else v56={};v57={};v107=1;end end end end end if (v55==3) then local v102=0 -0;local v103;while true do if (v102~=(0 + 0)) then else v103=0;while true do if (v103==0) then local v108=0;while true do if (v108~=(1 -0)) then else v103=1108 -(356 + 751);break;end if (v108==(0 -0)) then for v126=1739 -(1185 + 553),v23() do v57[v126-(1 -0)]=v28();end for v128=1 -0,v23() do v58[v128]=v23();end v108=969 -(913 + 55);end end end if (v103==(1 -0)) then return v59;end end break;end end end break;end end end break;end end end v29=nil;v17=7;end if (v17==0) then v18=1;v19=nil;v15=v4(v3(v15,5),"..",function(v37)if (v1(v37,2)==79) then v19=v0(v3(v37,1,1));return "";else local v66=v2(v0(v37,16));if v19 then local v73=v5(v66,v19);v19=nil;return v73;else return v66;end end end);v17=1;end if (5==v17) then v26=v23;v27=nil;function v27(...)return {...},v11("#",...);end v17=6;end end end vv8());end
